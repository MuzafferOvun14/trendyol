{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactcourse\\\\trendyol\\\\src\\\\index.js\";\nimport { render } from 'react-dom';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\nimport { Route, Router } from 'react-router';\nimport { routerMiddleware, syncHistoryWithStore, routerReducer, ConnectedRouter as RouterR } from 'react-router-redux';\nimport { HashRouter, withRouter } from 'react-router-dom';\nimport { createHashHistory } from 'history';\nimport createHistory from 'history/createBrowserHistory';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport reducer from './reducers';\nimport { fetchAllDummyItems, fetchContainerId } from './actions';\nimport App from './containers/App';\nimport getMuiTheme from 'material-ui/styles/getMuiTheme';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport CheckoutContainer from './containers/CheckoutContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet hashHistory = createHashHistory();\nconst history = createHistory();\nconst middlewareRoute = routerMiddleware(history);\nconst reducers = combineReducers({\n  register: reducer,\n  router: routerReducer\n});\nconst middleware = [thunkMiddleware, promiseMiddleware({\n  promiseTypeSuffixes: ['REQ', 'ACK', 'ERR']\n})];\n\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(reducer, applyMiddleware(...middleware));\nconst muiTheme = getMuiTheme({\n  textField: {\n    focusColor: '#9fa5a8'\n  }\n});\nstore.dispatch(fetchAllDummyItems());\nstore.dispatch(fetchContainerId());\nrender( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n    muiTheme: muiTheme,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      history: history,\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        component: App\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/checkout\",\n        component: CheckoutContainer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 56,\n  columnNumber: 3\n}, this), document.getElementById('root'));","map":{"version":3,"sources":["C:/reactcourse/trendyol/src/index.js"],"names":["render","createStore","applyMiddleware","combineReducers","composeWithDevTools","Provider","Route","Router","routerMiddleware","syncHistoryWithStore","routerReducer","ConnectedRouter","RouterR","HashRouter","withRouter","createHashHistory","createHistory","createLogger","thunkMiddleware","promiseMiddleware","reducer","fetchAllDummyItems","fetchContainerId","App","getMuiTheme","MuiThemeProvider","CheckoutContainer","hashHistory","history","middlewareRoute","reducers","register","router","middleware","promiseTypeSuffixes","process","env","NODE_ENV","push","store","muiTheme","textField","focusColor","dispatch","document","getElementById"],"mappings":";AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,cAA5B;AACA,SAAQC,gBAAR,EAA0BC,oBAA1B,EAAgDC,aAAhD,EAA+DC,eAAe,IAAIC,OAAlF,QAAgG,oBAAhG;AACA,SAAQC,UAAR,EAAoBC,UAApB,QAAqC,kBAArC;AACA,SAAQC,iBAAR,QAAgC,SAAhC;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,iBAAP,MAA8B,0BAA9B;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,SACEC,kBADF,EAEEC,gBAFF,QAGO,WAHP;AAIA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,gBAAP,MAA6B,qCAA7B;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;;AAEA,IAAIC,WAAW,GAAGZ,iBAAiB,EAAnC;AAEA,MAAMa,OAAO,GAAGZ,aAAa,EAA7B;AACA,MAAMa,eAAe,GAAGrB,gBAAgB,CAACoB,OAAD,CAAxC;AAEA,MAAME,QAAQ,GAAG3B,eAAe,CAAC;AAAE4B,EAAAA,QAAQ,EAAEX,OAAZ;AAAqBY,EAAAA,MAAM,EAAEtB;AAA7B,CAAD,CAAhC;AAEA,MAAMuB,UAAU,GAAG,CACjBf,eADiB,EAEjBC,iBAAiB,CAAC;AAChBe,EAAAA,mBAAmB,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf;AADL,CAAD,CAFA,CAAnB;;AAQA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCJ,EAAAA,UAAU,CAACK,IAAX,CAAgBrB,YAAY,EAA5B;AACD;;AAED,MAAMsB,KAAK,GAAGtC,WAAW,CACvBmB,OADuB,EAEtBlB,eAAe,CAAC,GAAG+B,UAAJ,CAFO,CAAzB;AAKA,MAAMO,QAAQ,GAAGhB,WAAW,CAAC;AAC3BiB,EAAAA,SAAS,EAAE;AACTC,IAAAA,UAAU,EAAE;AADH;AADgB,CAAD,CAA5B;AAMAH,KAAK,CAACI,QAAN,CAAetB,kBAAkB,EAAjC;AACAkB,KAAK,CAACI,QAAN,CAAerB,gBAAgB,EAA/B;AACAtB,MAAM,eACJ,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEuC,KAAjB;AAAA,yBACE,QAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAEC,QAA5B;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEZ,OAAjB;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,SAAS,EAAEL;AAA3B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,SAAS,EAAEG;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADI,EASJkB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CATI,CAAN","sourcesContent":["import { render } from 'react-dom'\nimport { createStore, applyMiddleware, combineReducers } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { Provider } from 'react-redux'\nimport {Route, Router} from 'react-router'\nimport {routerMiddleware, syncHistoryWithStore, routerReducer, ConnectedRouter as RouterR} from 'react-router-redux'\nimport {HashRouter, withRouter} from 'react-router-dom'\nimport {createHashHistory} from 'history';\nimport createHistory from 'history/createBrowserHistory';\nimport { createLogger } from 'redux-logger'\nimport thunkMiddleware from 'redux-thunk'\nimport promiseMiddleware from 'redux-promise-middleware'\nimport reducer from './reducers'\nimport {\n  fetchAllDummyItems,\n  fetchContainerId,\n} from './actions'\nimport App from './containers/App'\nimport getMuiTheme from 'material-ui/styles/getMuiTheme'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport CheckoutContainer from './containers/CheckoutContainer'\n\nlet hashHistory = createHashHistory()\n\nconst history = createHistory()\nconst middlewareRoute = routerMiddleware(history)\n\nconst reducers = combineReducers({ register: reducer, router: routerReducer })\n\nconst middleware = [\n  thunkMiddleware,\n  promiseMiddleware({\n    promiseTypeSuffixes: ['REQ', 'ACK', 'ERR'],\n  }),\n];\n\n\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\nconst store = createStore(\n  reducer,\n   applyMiddleware(...middleware)\n )\n\nconst muiTheme = getMuiTheme({\n  textField: {\n    focusColor: '#9fa5a8',\n  },\n})\n\nstore.dispatch(fetchAllDummyItems())\nstore.dispatch(fetchContainerId())\nrender(\n  <Provider store={store}>\n    <MuiThemeProvider muiTheme={muiTheme}>\n      <Router history={history}>\n        <Route path=\"/\" component={App} />\n        <Route path=\"/checkout\" component={CheckoutContainer} />\n      </Router>\n    </MuiThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n)"]},"metadata":{},"sourceType":"module"}